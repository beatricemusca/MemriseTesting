///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyTest1.Memrise.WebApp.Logins
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EmailLogin recording.
    /// </summary>
    [TestModule("f54f1069-2f67-4b96-a099-eec806d90957", ModuleType.Recording, 1)]
    public partial class EmailLogin : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyTest1.MyTest1Repository repository.
        /// </summary>
        public static MyTest1.MyTest1Repository repo = MyTest1.MyTest1Repository.Instance;

        static EmailLogin instance = new EmailLogin();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EmailLogin()
        {
            varUsername = "beatrisy";
            varPassword = "MemriseBM12345";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EmailLogin Instance
        {
            get { return instance; }
        }

#region Variables

        string _varUsername;

        /// <summary>
        /// Gets or sets the value of variable varUsername.
        /// </summary>
        [TestVariable("10c06ea8-66be-411c-b34a-1131d17ef87b")]
        public string varUsername
        {
            get { return _varUsername; }
            set { _varUsername = value; }
        }

        string _varPassword;

        /// <summary>
        /// Gets or sets the value of variable varPassword.
        /// </summary>
        [TestVariable("064defa2-9797-49b0-ab3c-7486bbfab016")]
        public string varPassword
        {
            get { return _varPassword; }
            set { _varPassword = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MemriseLearningMadeJoyful.HeaderNav.HttpsWwwMemriseComLogin' at Center.", repo.MemriseLearningMadeJoyful.HeaderNav.HttpsWwwMemriseComLoginInfo, new RecordItemIndex(0));
            repo.MemriseLearningMadeJoyful.HeaderNav.HttpsWwwMemriseComLogin.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MemriseLearningMadeJoyful.Username' at Center.", repo.MemriseLearningMadeJoyful.UsernameInfo, new RecordItemIndex(1));
            repo.MemriseLearningMadeJoyful.Username.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varUsername' with focus on 'MemriseLearningMadeJoyful.Username'.", repo.MemriseLearningMadeJoyful.UsernameInfo, new RecordItemIndex(2));
            repo.MemriseLearningMadeJoyful.Username.PressKeys(varUsername);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MemriseLearningMadeJoyful.Password' at Center.", repo.MemriseLearningMadeJoyful.PasswordInfo, new RecordItemIndex(3));
            repo.MemriseLearningMadeJoyful.Password.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varPassword' with focus on 'MemriseLearningMadeJoyful.Password'.", repo.MemriseLearningMadeJoyful.PasswordInfo, new RecordItemIndex(4));
            repo.MemriseLearningMadeJoyful.Password.PressKeys(varPassword);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MemriseLearningMadeJoyful.Submit' at Center.", repo.MemriseLearningMadeJoyful.SubmitInfo, new RecordItemIndex(5));
            repo.MemriseLearningMadeJoyful.Submit.Click();
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
